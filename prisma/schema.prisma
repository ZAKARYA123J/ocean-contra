generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL") 
}

model Register {
  id          Int        @id @default(autoincrement())
  Firstname   String
  Lastname    String 
  email       String     @unique
  password    String
  numero      String 
  StatuClient StatuClient
  dossiers    Dossier[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  client      Client?    @relation("ClientRegister")
}

model Client {
  id            Int         @id @default(autoincrement())
  CIN           String?
  CINFront      String?
  CINBackground String?
  secture       String?
  city          String?
  address       String?
  zipCode       String?
  passport      String?
  diplomat      String?
  images        String?
  apostyle      String?
  registerId    Int?        @unique 
  register      Register?   @relation("ClientRegister", fields: [registerId], references: [id]) 
  addaDocument  String[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Dossier {
  id         Int      @id @default(autoincrement())
  idContra   Int
  idregister Int   
  status     Status
  register   Register @relation(fields: [idregister], references: [id]) 
  contra     Contra   @relation(fields: [idContra], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt 
}


model Contra {
  id          Int      @id @default(autoincrement())
  image       String   
  titleCity   String
  prix        Float
  levelLangue String
  duration    String
  steps       String[] 
  dossiers    Dossier[] 
  avantage    String?  
  sectures    Secture[] @relation("ContraSecture")
}

model Secture {
  id          Int      @id @default(autoincrement())
  nameSecture String
  contras     Contra[]  @relation("ContraSecture") 
}

enum Status {
  CONFIRMED
  INCOMPLETED
  COMPLETED
}

enum StatuClient {
  Pending
  verified
  inverified
}